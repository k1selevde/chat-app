{"version":3,"sources":["redux/reducers/attachments.ts","redux/reducers/dialogs.ts","redux/reducers/messages.ts","redux/reducers/user.ts","redux/reducers sync /^/.*$","reportWebVitals.ts","utils/helpers/validateForm.ts","components/Block/index.tsx","components/Button/index.tsx","utils/helpers/validateFormField.ts","components/FormField/index.tsx","components/Status/index.tsx","components/Messages/index.tsx","components/Message/index.tsx","components/Search/index.tsx","containers/Messages.tsx","containers/Status.tsx","containers/Sidebar.tsx","containers/ChatInput.tsx","containers/Search.tsx","containers/Dialogs.tsx","components/Profile/index.tsx","components/Sidebar/index.tsx","components/Dialogs/index.tsx","components/ForgotPassword/index.tsx","modules/LoginForm/components/LoginForm.tsx","modules/LoginForm/index.tsx","modules/LoginForm/containers/LoginForm.tsx","modules/RegisterForm/components/RegisterForm.tsx","modules/RegisterForm/index.tsx","modules/RegisterForm/containers/RegisterForm.tsx","pages/Auth/index.tsx","pages/Home/index.tsx","App.tsx","redux/sagas/user.ts","redux/sagas/index.ts","redux/store.ts","index.tsx","redux/reducers/index.ts"],"names":["initialState","data","token","window","localStorage","isAuth","Boolean","state","action","type","payload","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","values","errors","rules","email","value","test","password","passwordLogin","password_2","trim","fullname","forEach","key","Block","children","className","cn","Button","props","touched","FormField","prefix","name","placeholder","icon","handleChange","handleBlur","Item","validateStatus","validateFormField","help","hasFeedback","style","minHeight","Password","LockOutlined","size","onChange","onBlur","Status","isOnline","messages","Messages","mes","Message","Search","MessagesContainer","StatusContainer","SidebarContainer","ChatInput","SearchContainer","DialogsContainer","Profile","Sidebar","Dialogs","ForgotPassword","width","MailOutlined","suffix","title","InfoCircleOutlined","color","textAlign","to","LoginForm","handleSubmit","isValid","isSubmitting","dirty","disabled","onClick","withFormik","enableReinitialize","validate","validateForm","setSubmitting","setTimeout","alert","JSON","stringify","displayName","RegisterForm","onSubmit","Auth","exact","path","component","Home","App","render","fetchUsers","userSaga","getApi","fetch","method","headers","response","json","catch","error","call","users","put","message","takeEvery","rootSaga","all","sagaMiddleware","createSagaMiddleware","middleware","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","run","mySaga","app","ReactDOM","document","getElementById","combineReducers","reduce","initial","require","default"],"mappings":"qHAAMA,EAAe,CACjBC,KAAM,KACNC,MAAOC,OAAOC,aAAaF,MAC3BG,OAAQC,QAAQH,OAAOC,aAAaF,QAMzB,qBAA0D,IAAzDK,EAAwD,uDAA9BP,EAAcQ,EAAgB,uCACpE,OAAQA,EAAOC,MACX,IAAK,gBACD,OAAO,2BACAF,GADP,IAEIN,KAAMO,EAAOE,QACbL,QAAQ,EACRH,MAAOC,OAAOC,aAAaF,QAEnC,QACI,OAAOK,K,oDCnBbP,EAAe,CACjBC,KAAM,KACNC,MAAOC,OAAOC,aAAaF,MAC3BG,OAAQC,QAAQH,OAAOC,aAAaF,QAMzB,qBAA0D,IAAzDK,EAAwD,uDAA9BP,EAAcQ,EAAgB,uCACpE,OAAQA,EAAOC,MACX,IAAK,gBACD,OAAO,2BACAF,GADP,IAEIN,KAAMO,EAAOE,QACbL,QAAQ,EACRH,MAAOC,OAAOC,aAAaF,QAEnC,QACI,OAAOK,K,oDCnBbP,EAAe,CACjBC,KAAM,KACNC,MAAOC,OAAOC,aAAaF,MAC3BG,OAAQC,QAAQH,OAAOC,aAAaF,QAMzB,qBAA0D,IAAzDK,EAAwD,uDAA9BP,EAAcQ,EAAgB,uCACpE,OAAQA,EAAOC,MACX,IAAK,gBACD,OAAO,2BACAF,GADP,IAEIN,KAAMO,EAAOE,QACbL,QAAQ,EACRH,MAAOC,OAAOC,aAAaF,QAEnC,QACI,OAAOK,K,oDCnBbP,EAAe,CACjBC,KAAM,KACNC,MAAOC,OAAOC,aAAaF,MAC3BG,OAAQC,QAAQH,OAAOC,aAAaF,QAMzB,qBAA0D,IAAzDK,EAAwD,uDAA9BP,EAAcQ,EAAgB,uCACpE,OAAQA,EAAOC,MACX,IAAK,gBACD,OAAO,2BACAF,GADP,IAEIN,KAAMO,EAAOE,QACbL,QAAQ,EACRH,MAAOC,OAAOC,aAAaF,QAEnC,QACI,OAAOK,K,0NCnBnB,IAAII,EAAM,CACT,KAAM,GACN,gBAAiB,IACjB,mBAAoB,IACpB,YAAa,IACb,eAAgB,IAChB,UAAW,GACX,aAAc,GACd,aAAc,IACd,gBAAiB,IACjB,SAAU,IACV,YAAa,KAId,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,kHClBLY,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCTC,cAAoC,IAAlCtB,EAAiC,EAAjCA,OAAQ8B,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,OACvBC,EAAQ,CACVC,MAAO,SAACC,GACCA,EAEO,4CAA4CC,KAAKD,KACzDH,EAAOE,MAAQ,2DAFfF,EAAOE,MAAQ,qDAMvBG,SAAU,SAACF,GACFA,EAGAlC,GACA,8CAA8CmC,KAAKD,KAEpDH,EAAOK,SAAW,wHALlBL,EAAOK,SAAW,mFAS1BC,cAAe,SAACH,GACPA,IACDH,EAAOM,cAAgB,oFAI/BC,WAAY,SAACJ,GAQJlC,IACIkC,EAAMK,OAEAtC,QAAQ8B,EAAOK,UACtBL,EAAOO,WAAa,kFACbR,EAAOM,UAAYN,EAAOQ,aACjCP,EAAOO,WAAa,4GAJpBP,EAAOO,WAAa,0HAShCE,SAAU,SAACN,GACFlC,GAAWkC,IACZH,EAAOS,SAAW,8IAK9BvB,OAAOD,KAAKc,GAAQW,SAAQ,SAAAC,GAAG,OAAIV,EAAMU,IAAQV,EAAMU,GAAKZ,EAAOY,Q,sECjCxDC,G,OAVe,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UACtC,OACI,qBAAKA,UAAU,gBAAf,SACI,qBAAKA,UAAWC,IAAG,QAASD,GAA5B,SACKD,Q,iBCKFG,G,OARgB,SAACC,GAC5B,OACI,cAAC,IAAD,eACQA,MCND,WAACN,EAAUO,EAAcnB,EAAaC,GAClD,OAAIkB,EAAQP,GACJX,EAAOW,GACA,QAEA,UAGJ,IC2DCQ,EAtD6B,SAAC,GAWpB,EAVFC,OAUG,IATHC,EASE,EATFA,KACAC,EAQE,EARFA,YAEAjD,GAME,EAPFkD,KAOE,EANFlD,MACAmD,EAKE,EALFA,aACAC,EAIE,EAJFA,WACAP,EAGE,EAHFA,QACAlB,EAEE,EAFFA,OACAD,EACE,EADFA,OAMnB,OACI,cAAC,IAAK2B,KAAN,CAEIC,eAAgBC,EAAkBP,EAAMH,EAAQnB,EAAQC,GAExD6B,KAAOX,EAAQG,GAAarB,EAAOqB,GAAZ,GACvBS,aAAW,EACXC,MAAO,CAACC,UAAW,QANvB,SAQc,YAAR3D,EACE,cAAC,IAAM4D,SAAP,CACIb,OAAQ,cAACc,EAAA,EAAD,IACRxD,GAAI2C,EACJc,KAAK,QACLb,YAAaA,EAEbnB,MAAOJ,EAAOsB,GACde,SAAUZ,EACVa,OAAQZ,EACRpD,KAAMA,IAIV,cAAC,IAAD,CACIK,GAAI2C,EACJc,KAAK,QACLb,YAAaA,EAEbnB,MAAOJ,EAAOsB,GACde,SAAUZ,EACVa,OAAQZ,EACRpD,KAAMA,OC1CXiE,G,OAhBwB,SAAC,GAA8C,IAAD,IAA5C7B,gBAA4C,MAAjC,WAAiC,MAArB8B,gBAAqB,SACjF,OACI,qBAAKzB,UAAU,SAAf,SACI,sBAAKA,UAAU,eAAf,UACI,oBAAIA,UAAU,mBAAd,SAAkCL,IAClC,sBAAKK,UAAU,mBAAf,UACI,qBAAKA,UAAU,4BACf,qBAAKA,UAAU,2BAAf,SAA2CyB,EAAW,SAAW,sBCPjFC,G,OAAW,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,aAmBWC,EAf4B,WACvC,OACI,sBAAK3B,UAAU,iBAAf,0BAGK0B,EAASjE,KAAI,SAAAmE,GAAG,OACb,8BACI,cAAC,EAAD,aCrBLC,G,OARE,WACb,OACI,iDCQOC,EAZC,WACZ,OACI,+CAEI,uBACI9B,UAAU,gBACVzC,KAAK,aCCNwE,EANsB,WACjC,OACI,cAAC,EAAD,KCIOC,EANU,WACrB,OACI,cAAC,EAAD,KCQOC,EARW,WACtB,OACI,cAAC,WAAD,UACI,cAAC,EAAD,OCAGC,EANI,WACf,OACI,uDCKOC,EANU,WACrB,OACI,cAAC,EAAD,KCMOC,EANW,WACtB,OACI,cAAC,EAAD,KCYOC,G,OAXE,SAAC,GAAuC,IAAD,IAArC1C,gBAAqC,MAA1B,qBAA0B,EACpD,OACI,sBAAKK,UAAU,UAAf,UACI,qBAAKA,UAAU,oBAEf,oBAAIA,UAAU,oBAAd,SAAmCL,SCehC2C,G,OAhBY,WACvB,OACI,qBAAKtC,UAAU,UAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IAEA,cAAC,EAAD,aCRLuC,G,OATE,WACb,OACI,sBAAKvC,UAAU,UAAf,UACI,oBAAIA,UAAU,iBAAd,2EACA,qBAAKA,UAAU,gBAAf,iC,SCuFGwC,EA5EwC,SAACrC,GAAgB,YAWhEA,GAOJ,OACI,8BACI,cAAC,EAAD,UACI,sBAAKH,UAAU,OAAf,UACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,cAAd,8BAEA,eAAC,IAAD,CAAMA,UAAU,aAAhB,UACI,cAAC,IAAKY,KAAN,CAGII,aAAW,EACXC,MAAO,CAACC,UAAW,QAJvB,SAMI,cAAC,IAAD,CACItD,GAAG,QACHyD,KAAK,QACLJ,MAAO,CAACwB,MAAO,SACfjC,YAAY,SACZjD,KAAK,QACL+C,OAAQ,cAACoC,EAAA,EAAD,IACRC,OACI,cAAC,IAAD,CAASC,MAAM,2BAAf,SACI,cAACC,EAAA,EAAD,CAAoB5B,MAAO,CAAE6B,MAAO,uBAG5CxB,SA9BX,SAACtD,SAiCE,cAAC,IAAK4C,KAAN,CACIK,MAAO,CAAC8B,UAAW,UADvB,SAGI,cAAC,EAAD,CAEI1B,KAAK,QACL9D,KAAK,UAHT,4BAWZ,sBAAKyC,UAAU,eAAf,UACI,gEACA,cAAC,IAAD,CACIA,UAAU,sBACVgD,GAAG,UAFP,0CCyBTC,EA9FmB,SAAC9C,GAAgB,IAE3ClB,EASAkB,EATAlB,OACAmB,EAQAD,EARAC,QACAlB,EAOAiB,EAPAjB,OACAwB,EAMAP,EANAO,aACAC,EAKAR,EALAQ,WACAuC,EAIA/C,EAJA+C,aACAC,EAGAhD,EAHAgD,QACAC,EAEAjD,EAFAiD,aAEAjD,EADAkD,MAIJ,OACI,8BACI,cAAC,EAAD,UACI,sBAAKrD,UAAU,OAAf,UACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,cAAd,qBAEA,eAAC,IAAD,CAAMA,UAAU,aAAhB,UACI,cAAC,IAAKY,KAAN,CACIC,eAAgBC,EAAkB,QAASV,EAAQnB,EAASC,GAC5D6B,KAAOX,EAAQhB,MAAaF,EAAOE,MAAZ,GACvB4B,aAAW,EACXC,MAAO,CAACC,UAAW,QAJvB,SAMI,cAAC,IAAD,CACItD,GAAG,QACHyD,KAAK,QACLJ,MAAO,CAACwB,MAAO,SACfjC,YAAY,SACZjD,KAAK,QACL+C,OAAQ,cAACoC,EAAA,EAAD,IACRC,OACI,cAAC,IAAD,CAASC,MAAM,2BAAf,SACI,cAACC,EAAA,EAAD,CAAoB5B,MAAO,CAAE6B,MAAO,uBAG5CxB,SAAUZ,EACVa,OAAQZ,MAGhB,cAAC,IAAKC,KAAN,CACIC,eAAgBC,EAAkB,gBAAiBV,EAAQnB,EAAQC,GACnE6B,KAAOX,EAAQZ,cAAqBN,EAAOM,cAAZ,GAC/ByB,MAAO,CAACC,UAAW,QAHvB,SAKI,cAAC,IAAMC,SAAP,CACIvD,GAAG,gBACHyD,KAAK,QACLb,YAAY,uCACZjD,KAAK,WACL+C,OAAQ,cAACc,EAAA,EAAD,IACRE,SAAUZ,EACVa,OAAQZ,MAGhB,cAAC,IAAKC,KAAN,CACIK,MAAO,CAAC8B,UAAW,UADvB,SAGI,cAAC,EAAD,CACIO,WAAYrE,EAAOO,eAAiBP,EAAOG,SAAW+D,GAAWC,EACjE/B,KAAK,QACL9D,KAAK,UACLgG,QAASL,EAJb,2BASR,cAAC,IAAD,CACIlD,UAAU,sBACVgD,GAAG,mBAFP,2CAQJ,sBAAKhD,UAAU,eAAf,UACI,gEACA,cAAC,IAAD,CACIA,UAAU,sBACVgD,GAAG,UAFP,0CC5FTC,ECMYO,YAAW,CAClCC,oBAAoB,EACpBC,SAFkC,SAEzBzE,GACL,IAAIC,EAAS,GAEb,OADAyE,EAAa,CAAExG,QAAQ,EAAO8B,SAAQC,WAC/BA,GAEXgE,aAAc,SAACjE,EAAD,GAAgC,IAArB2E,EAAoB,EAApBA,cACrBC,YAAW,WACPC,MAAMC,KAAKC,UAAU/E,EAAQ,KAAM,IACnC2E,GAAc,KACf,MAEPK,YAAa,aAbUT,CAcxBP,GCsGYiB,EA/GsB,SAAC/D,GAAiB,IAE/ClB,EASAkB,EATAlB,OACAmB,EAQAD,EARAC,QACAlB,EAOAiB,EAPAjB,OACAwB,EAMAP,EANAO,aACAC,EAKAR,EALAQ,WACAuC,EAIA/C,EAJA+C,aACAC,EAGAhD,EAHAgD,QACAC,EAEAjD,EAFAiD,aACAC,EACAlD,EADAkD,MAKJ,OACI,8BACI,cAAC,EAAD,UACI,sBAAKrD,UAAU,OAAf,UACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,cAAd,gFACA,mBAAGA,UAAU,cAAb,yPAEA,8BACQ,eAAC,IAAD,CACIA,UAAU,aAEVmE,SAAUjB,EAHd,UAKI,cAAC,EAAD,CACI3C,KAAK,QACLC,YAAY,QACZE,aAAcA,EACdC,WAAYA,EACZzB,OAAQA,EACRD,OAAQA,EACRmB,QAASA,IAEb,cAAC,EAAD,CACIE,OAAQ,cAACc,EAAA,EAAD,IACRb,KAAK,WACLC,YAAY,gGACZE,aAAcA,EACdC,WAAYA,EACZzB,OAAQA,EACRD,OAAQA,EACRmB,QAASA,IAGb,cAAC,EAAD,CACIG,KAAK,WACLC,YAAY,uCACZE,aAAcA,EACdC,WAAYA,EACZzB,OAAQA,EACRD,OAAQA,EACR1B,KAAK,WACL6C,QAASA,IAGb,cAAC,EAAD,CACIG,KAAK,aACLC,YAAY,8FACZE,aAAcA,EACdC,WAAYA,EACZzB,OAAQA,EACR3B,KAAK,WACL0B,OAAQA,EACRmB,QAASA,IAGb,eAAC,IAAKQ,KAAN,CACIK,MAAO,CAAC8B,UAAW,UADvB,UAGKK,IAAiBD,GAAW,yEAC7B,cAAC,EAAD,CACIG,UAAWD,IAAUF,GAAWC,EAChC/B,KAAK,QACL9D,KAAK,UACLgG,QAASL,EAJb,iCAqBpB,sBAAKlD,UAAU,eAAf,UACI,wDACA,cAAC,IAAD,CACIA,UAAU,sBACVgD,GAAG,UAFP,mCC7GTkB,ECQgBV,YAAW,CACtCC,oBAAoB,EAEpBC,SAHsC,SAG7BzE,GACL,IAAIC,EAAS,GAEb,OADAyE,EAAa,CAAExG,QAAQ,EAAO8B,SAAQC,WAC/BA,GAEXgE,aAAc,SAACjE,EAAD,GAAgC,IAArB2E,EAAoB,EAApBA,cACrBC,YAAW,WACPC,MAAMC,KAAKC,UAAU/E,EAAQ,KAAM,IACnC2E,GAAc,KACf,OAZoBJ,CAe5BU,GCIYE,EAxBD,WACV,OACI,yBAASpE,UAAU,OAAnB,SACI,sBAAKA,UAAU,eAAf,UACI,cAAC,IAAD,CACIqE,OAAK,EACLC,KAAK,UACLC,UAAWtB,IAEf,cAAC,IAAD,CACIoB,OAAK,EACLC,KAAK,UACLC,UAAWL,IAEf,cAAC,IAAD,CACIG,OAAK,EACLC,KAAK,iBACLC,UAAWtB,UCMhBuB,G,OAnBc,SAACrE,GAC1B,OACI,yBAASH,UAAU,OAAnB,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,cAAC,EAAD,MAEJ,qBAAKA,UAAU,qBAAf,SACQ,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,uBAAf,SAAsC,cAAC,EAAD,MACtC,qBAAKA,UAAU,yBAAf,SAAwC,cAAC,EAAD,MACxC,qBAAKA,UAAU,0BAAf,SAAyC,cAAC,EAAD,kBCctDyE,MAzBf,WACE,OACE,qBAAKzE,UAAU,YAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIqE,OAAK,EACLC,KAAM,CAAC,UAAW,UAAW,kBAC7BC,UAAWH,IAGf,cAAC,IAAD,CACIE,KAAK,mBACLC,UAAW/B,IAGf,cAAC,IAAD,CACI6B,OAAK,EACLC,KAAK,IACLI,OAAQ,kBAAgB,cAAC,EAAD,a,4ECZ9BC,I,aASAC,IApBV,SAASC,KACL,OAAOC,MAHC,6CAGa,CACjBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAGrBrG,MAAK,SAAAsG,GAAQ,OAAIA,EAASC,UACxBC,OAAM,SAACC,GAAW,MAAMA,KAGjC,SAAUT,GAAWrH,GAArB,wEAEsB,OAFtB,kBAE4B+H,aAAKR,IAFjC,OAGQ,OADMS,EAFd,gBAGcC,aAAI,CAAChI,KAAM,oBAAqB+H,MAAOA,IAHrD,8BAKQ,OALR,mCAKcC,aAAI,CAAChI,KAAM,mBAAoBiI,QAAS,KAAEA,UALxD,sDASA,SAAUZ,KAAV,kEACI,OADJ,SACUa,aAAU,sBAAuBd,IAD3C,wCAKeC,U,aC1BLc,IAAV,SAAUA,KAAV,kEACI,OADJ,SACUC,aAAI,CACNf,OAFR,wCAMec,UCATE,GAAiBC,cAGjBC,GAAoB,CAACF,IAErBG,GAAQC,sBACVC,UACA,GACAC,8BACIC,kBAAe,WAAf,EAAmBL,MAK3BF,GAAeQ,IAAIC,IAEJN,UCXTO,I,OACF,cAAC,IAAD,CAAUP,MAAOA,GAAjB,SACI,cAAC,IAAD,UACI,cAAC,EAAD,SAOZQ,IAAS7B,OACL4B,GAEFE,SAASC,eAAe,SAO1BjI,K,gCClCA,mBASekI,oCAPE,CAAC,WAAY,UAAW,OAAQ,eAQpCC,QAAO,SAACC,EAAuBrG,GAEpC,OADAqG,EAAQrG,GAAQsG,OAAQ,YAAKtG,IAAQuG,QAC9BF,IACR,O","file":"static/js/main.3504ecc7.chunk.js","sourcesContent":["const initialState = {\r\n    data: null,\r\n    token: window.localStorage.token,\r\n    isAuth: Boolean(window.localStorage.token)\r\n}\r\n\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport default (state: InitialStateType = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case \"USER:SET_DATA\":\r\n            return {\r\n                ...state,\r\n                data: action.payload,\r\n                isAuth: true,\r\n                token: window.localStorage.token\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    data: null,\r\n    token: window.localStorage.token,\r\n    isAuth: Boolean(window.localStorage.token)\r\n}\r\n\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport default (state: InitialStateType = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case \"USER:SET_DATA\":\r\n            return {\r\n                ...state,\r\n                data: action.payload,\r\n                isAuth: true,\r\n                token: window.localStorage.token\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    data: null,\r\n    token: window.localStorage.token,\r\n    isAuth: Boolean(window.localStorage.token)\r\n}\r\n\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport default (state: InitialStateType = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case \"USER:SET_DATA\":\r\n            return {\r\n                ...state,\r\n                data: action.payload,\r\n                isAuth: true,\r\n                token: window.localStorage.token\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    data: null,\r\n    token: window.localStorage.token,\r\n    isAuth: Boolean(window.localStorage.token)\r\n}\r\n\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport default (state: InitialStateType = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case \"USER:SET_DATA\":\r\n            return {\r\n                ...state,\r\n                data: action.payload,\r\n                isAuth: true,\r\n                token: window.localStorage.token\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","var map = {\n\t\"./\": 68,\n\t\"./attachments\": 120,\n\t\"./attachments.ts\": 120,\n\t\"./dialogs\": 121,\n\t\"./dialogs.ts\": 121,\n\t\"./index\": 68,\n\t\"./index.ts\": 68,\n\t\"./messages\": 122,\n\t\"./messages.ts\": 122,\n\t\"./user\": 123,\n\t\"./user.ts\": 123\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 269;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default ({isAuth, values, errors}: any) => {\r\n    const rules = {\r\n        email: (value: any) => {\r\n            if (!value) {\r\n                errors.email = \"Введите E-Mail\";\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n                errors.email = \"Неверный E-Mail\";\r\n            }\r\n        },\r\n\r\n        password: (value: any) => {\r\n            if (!value) {\r\n                errors.password = \"Введите пароль\";\r\n            } else if (\r\n                !isAuth &&\r\n                !/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/.test(value)\r\n            ) {\r\n                errors.password = \"Слишком лёгкий пароль\";\r\n            }\r\n        },\r\n\r\n        passwordLogin: (value: any) => {\r\n            if (!value) {\r\n                errors.passwordLogin = \"Введите пароль\";\r\n            }\r\n        },\r\n\r\n        password_2: (value: any) => {\r\n            // if (!isAuth && !value) {\r\n            //    if (Boolean(errors.password)) {\r\n            //         errors.password_2 = \"Что-то не так\"\r\n            //     } else if ( values.password != value) {\r\n            //         errors.password_2 = \"Пароли не совпадают.\"\r\n            //     }\r\n            // }\r\n            if (!isAuth) {\r\n                if (!value.trim()) {\r\n                    errors.password_2 = \"Введите пароль еще раз\"\r\n                } else if (Boolean(errors.password)) {\r\n                    errors.password_2 = \"Пароль неверен\"\r\n                } else if (values.password != values.password_2) {\r\n                    errors.password_2 = \"Пароли не совпадают\"\r\n                }\r\n            }\r\n        },\r\n\r\n        fullname: (value: any) => {\r\n            if (!isAuth && !value) {\r\n                errors.fullname = \"Укажите своё имя и фамилию\"\r\n            }\r\n        }\r\n    }\r\n    // @ts-ignore\r\n    Object.keys(values).forEach(key => rules[key] && rules[key](values[key]))\r\n};","import * as React from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport './Block.scss'\r\n\r\n\r\ntype BlockProps = {\r\n    className: string\r\n}\r\n\r\nconst Block: React.FC<any>  = ({children, className }) => {\r\n    return (\r\n        <div className=\"block__parent\">\r\n            <div className={cn(\"block\", className)}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Block;\r\n","import * as React from 'react';\r\n\r\nimport { Button as BaseButton } from \"antd\"\r\n\r\nimport './Button.scss';\r\n\r\n\r\ntype ButtonProps = {\r\n\r\n}\r\n\r\nconst Button: React.FC<any>  = (props) => {\r\n    return (\r\n        <BaseButton\r\n            {...props}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Button;\r\n\r\n","type validateFormFieldType = \"\" | \"success\" | \"warning\" | \"error\" | \"validating\"\r\n\r\ntype validateFFProps = {\r\n    key: any,\r\n    touched: boolean,\r\n    errors: any\r\n}\r\n\r\nexport default (key: any, touched: any, values: any, errors : any): validateFormFieldType => {\r\n   if (touched[key]) {\r\n       if (errors[key]) {\r\n           return \"error\"\r\n       } else {\r\n           return \"success\"\r\n       }\r\n   } else {\r\n       return \"\";\r\n   }\r\n}","import React from \"react\";\r\nimport { Form, Input} from \"antd\";\r\nimport validateFormField from \"../../utils/helpers/validateFormField\";\r\nimport {LockOutlined} from \"@ant-design/icons\";\r\n\r\n\r\ninterface FormFieldProps {\r\n    name: string;\r\n    placeholder?: string;\r\n    icon?: string;\r\n    type?: string;\r\n    handleChange?: any;\r\n    handleBlur?: any;\r\n    touched: object;\r\n    errors: object;\r\n    values: object;\r\n    prefix?: any;\r\n}\r\n\r\n\r\n\r\nconst FormField: React.FC<FormFieldProps> = ({\r\n                       prefix,\r\n                       name,\r\n                       placeholder,\r\n                       icon,\r\n                       type,\r\n                       handleChange,\r\n                       handleBlur,\r\n                       touched,\r\n                       errors,\r\n                       values\r\n                   }) => {\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Form.Item\r\n            //@ts-ignore\r\n            validateStatus={validateFormField(name, touched,values, errors)}\r\n            //@ts-ignore\r\n            help={!touched[name] ? \"\" : errors[name]}\r\n            hasFeedback\r\n            style={{minHeight: '70px'}}\r\n        >\r\n            {(type == \"password\") ?\r\n                <Input.Password\r\n                    prefix={<LockOutlined/>}\r\n                    id={name}\r\n                    size=\"large\"\r\n                    placeholder={placeholder}\r\n                    // @ts-ignore\r\n                    value={values[name]}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    type={type}\r\n                />\r\n\r\n                :\r\n                <Input\r\n                    id={name}\r\n                    size=\"large\"\r\n                    placeholder={placeholder}\r\n                    // @ts-ignore\r\n                    value={values[name]}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    type={type}\r\n                />\r\n            }\r\n        </Form.Item>\r\n    );\r\n};\r\n\r\nexport default FormField;","import * as React from 'react'\r\n\r\n\r\nimport './Status.scss'\r\n\r\ninterface StatusProps {\r\n    fullname?: string;\r\n    isOnline?: boolean;\r\n}\r\n\r\nconst Status: React.FC<StatusProps>  = ({fullname = 'Petr1223', isOnline = true}) => {\r\n    return (\r\n        <div className=\"status\">\r\n            <div className=\"status__wrap\">\r\n                <h3 className=\"status__fullname\">{fullname}</h3>\r\n                <div className=\"status_condition\">\r\n                    <div className=\"status__condition--icon\"></div>\r\n                    <div className=\"status__condition--title\">{isOnline ? 'online' : 'offline'}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Status;","import * as React from 'react'\r\nimport { Message } from '../'\r\n\r\n\r\nimport './Messages.scss'\r\n\r\ninterface MessagesProps {\r\n\r\n}\r\n\r\nlet messages = [\r\n    '1erwerwe',\r\n    '1erwerwe',\r\n    '1erwerwe',\r\n    '1erwerwe',\r\n    '1erwerwe',\r\n    '1erwerwe',\r\n    '1erwerwe',\r\n    '1erwerwe',\r\n    '1erwerwe',\r\n    '1erwerwe',\r\n    '1erwerwe',\r\n    '1erwerwe',\r\n    '1erwerwe',\r\n\r\n]\r\n\r\nconst Messages: React.FC<MessagesProps>  = () => {\r\n    return (\r\n        <div className=\"messages__wrap\">\r\n\r\n            messagesBlock\r\n            {messages.map(mes => (\r\n                <div>\r\n                    <Message />\r\n                </div>\r\n            ))}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Messages;","import * as React from 'react'\r\n\r\nimport './Message.scss'\r\n\r\n\r\nconst Message  = () => {\r\n    return (\r\n        <div>\r\n            Message!111!\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import * as React from 'react'\r\n\r\n\r\nconst Search  = () => {\r\n    return (\r\n        <div>\r\n            Search block\r\n            <input\r\n                className=\"search__input\"\r\n                type=\"text\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;","import * as React from 'react'\r\nimport {Messages} from '../components'\r\n\r\n\r\nconst MessagesContainer: React.FC  = () => {\r\n    return (\r\n        <Messages/>\r\n    );\r\n}\r\n\r\nexport default MessagesContainer;","import * as React from 'react'\r\n\r\nimport { Status } from '../components'\r\n\r\nconst StatusContainer  = () => {\r\n    return (\r\n        <Status />\r\n    );\r\n}\r\n\r\nexport default StatusContainer;","import * as React from 'react'\r\n\r\n\r\nimport { Sidebar } from '../components'\r\n\r\n\r\nconst SidebarContainer  = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Sidebar />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SidebarContainer;","import * as React from 'react'\r\n\r\n\r\nconst ChatInput  = () => {\r\n    return (\r\n        <div>Y'o chat input here</div>\r\n    );\r\n}\r\n\r\nexport default ChatInput;","import * as React from 'react'\r\n\r\nimport { Search } from '../components'\r\n\r\nconst SearchContainer  = () => {\r\n    return (\r\n        <Search />\r\n    );\r\n}\r\n\r\nexport default SearchContainer;","import * as React from 'react'\r\n\r\n\r\nimport { Dialogs } from \"../components\";\r\n\r\n\r\nconst DialogsContainer  = () => {\r\n    return (\r\n        <Dialogs />\r\n    );\r\n}\r\n\r\nexport default DialogsContainer;","import * as React from 'react'\r\n\r\n\r\nimport './Profile.scss'\r\n\r\ninterface ProfileProps {\r\n    fullname: string\r\n}\r\n\r\nconst Profile  = ({fullname = 'den4ikwqewqewqqeww'}) => {\r\n    return (\r\n        <div className=\"profile\">\r\n            <div className=\"profile__avatar\">\r\n            </div>\r\n            <h3 className=\"profile__fullname\">{fullname}</h3>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import * as React from 'react'\r\n\r\n\r\nimport { Search, Dialogs } from '../../containers'\r\n\r\nimport Profile from '../Profile'\r\n\r\n\r\n\r\nimport './Sidebar.scss';\r\n\r\n\r\n\r\nconst Sidebar: React.FC  = () => {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar-header\">\r\n                <div>\r\n                    <Profile />\r\n                    <Search />\r\n\r\n                    <Dialogs />\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import * as React from 'react'\r\n\r\nimport './Dialogs.scss'\r\n\r\nconst Dialogs  = () => {\r\n    return (\r\n        <div className=\"dialogs\">\r\n            <h4 className=\"dialogs__title\">Мои диалоги</h4>\r\n            <div className=\"dialogs__list\">Dialiogs block</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Input, Tooltip} from 'antd';\r\n\r\n\r\nimport { LockOutlined, MailOutlined, InfoCircleOutlined  } from '@ant-design/icons'\r\n\r\n\r\nimport { Block, Button } from \"../\"\r\n\r\nimport validateFormField from \"../../utils/helpers/validateFormField\";\r\n\r\n\r\n\r\ninterface ForgotPasswordProps {\r\n\r\n}\r\n\r\n\r\nconst ForgotPassword: React.FC<ForgotPasswordProps>  = (props: any) => {\r\n    const {\r\n        // values,\r\n        // touched,\r\n        // errors,\r\n        // handleChange,\r\n        // handleBlur,\r\n        // handleSubmit,\r\n        // isValid,\r\n        // isSubmitting,\r\n        // dirty\r\n    } = props;\r\n\r\n\r\n    const handleChange = (e: any) => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Block>\r\n                <div className=\"auth\">\r\n                    <div className=\"auth__top\">\r\n                        <h3 className=\"auth__title\">RESTORE PASSWORD</h3>\r\n\r\n                        <Form className=\"auth__form\">\r\n                            <Form.Item\r\n                                // validateStatus={validateFormField(\"email\", touched,values,  errors)}\r\n                                // help={!touched.email ? \"\" : errors.email}\r\n                                hasFeedback\r\n                                style={{minHeight: '70px'}}\r\n                            >\r\n                                <Input\r\n                                    id=\"email\"\r\n                                    size=\"large\"\r\n                                    style={{width: '320px'}}\r\n                                    placeholder=\"E-Mail\"\r\n                                    type=\"email\"\r\n                                    prefix={<MailOutlined/>}\r\n                                    suffix={\r\n                                        <Tooltip title=\"super useful information\">\r\n                                            <InfoCircleOutlined style={{ color: 'rgba(0,0,0,.45)' }} />\r\n                                        </Tooltip>\r\n                                    }\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                style={{textAlign: 'center'}}\r\n                            >\r\n                                <Button\r\n                                    // disabled={!(values.passwordLogin && values.email) || !isValid || isSubmitting}\r\n                                    size=\"large\"\r\n                                    type=\"primary\"\r\n                                    // onClick={handleSubmit}\r\n                                > Reset\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>\r\n\r\n                    <div className=\"auth__bottom\">\r\n                        <p>Don’t yet have an account?</p>\r\n                        <Link\r\n                            className=\"auth__register-link\"\r\n                            to=\"/signup\"\r\n                        >\r\n                            Register for free\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </Block>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword;","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Input, Tooltip} from 'antd';\r\n\r\n\r\nimport { LockOutlined, MailOutlined, InfoCircleOutlined  } from '@ant-design/icons'\r\n\r\n\r\nimport { Block, Button } from \"../../../components\"\r\n\r\nimport validateFormField from \"../../../utils/helpers/validateFormField\";\r\n\r\n\r\nconst LoginForm: React.FC<any>  = (props: any) => {\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isValid,\r\n        isSubmitting,\r\n        dirty\r\n    } = props;\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Block>\r\n                <div className=\"auth\">\r\n                    <div className=\"auth__top\">\r\n                        <h3 className=\"auth__title\">SIGN IN</h3>\r\n\r\n                        <Form className=\"auth__form\">\r\n                            <Form.Item\r\n                                validateStatus={validateFormField(\"email\", touched,values,  errors)}\r\n                                help={!touched.email ? \"\" : errors.email}\r\n                                hasFeedback\r\n                                style={{minHeight: '70px'}}\r\n                            >\r\n                                <Input\r\n                                    id=\"email\"\r\n                                    size=\"large\"\r\n                                    style={{width: '320px'}}\r\n                                    placeholder=\"E-Mail\"\r\n                                    type=\"email\"\r\n                                    prefix={<MailOutlined/>}\r\n                                    suffix={\r\n                                        <Tooltip title=\"super useful information\">\r\n                                            <InfoCircleOutlined style={{ color: 'rgba(0,0,0,.45)' }} />\r\n                                        </Tooltip>\r\n                                    }\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                validateStatus={validateFormField(\"passwordLogin\", touched,values, errors)}\r\n                                help={!touched.passwordLogin ? \"\" : errors.passwordLogin}\r\n                                style={{minHeight: '70px'}}\r\n                            >\r\n                                <Input.Password\r\n                                    id=\"passwordLogin\"\r\n                                    size=\"large\"\r\n                                    placeholder=\"Пароль\"\r\n                                    type=\"password\"\r\n                                    prefix={<LockOutlined/>}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                style={{textAlign: 'center'}}\r\n                            >\r\n                                <Button\r\n                                    disabled={!(values.passwordLogin && values.email) || !isValid || isSubmitting}\r\n                                    size=\"large\"\r\n                                    type=\"primary\"\r\n                                    onClick={handleSubmit}\r\n                                > Sign in\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                        <Link\r\n                            className=\"auth__register-link\"\r\n                            to=\"/forgot-password\"\r\n                        >\r\n                            Do you forgot a password ?\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className=\"auth__bottom\">\r\n                        <p>Don’t yet have an account?</p>\r\n                        <Link\r\n                            className=\"auth__register-link\"\r\n                            to=\"/signup\"\r\n                        >\r\n                            Register for free\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </Block>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginForm;","import LoginForm from \"./containers/LoginForm\";\r\n\r\nexport default LoginForm;","import * as React from 'react'\r\n\r\n\r\nimport {withFormik} from \"formik\";\r\n\r\nimport validateForm from '../../../utils/helpers/validateForm';\r\nimport LoginForm from '../components/LoginForm';\r\n\r\nconst LoginFormContainer = withFormik({\r\n    enableReinitialize: true,\r\n    validate(values) {\r\n        let errors = {};\r\n        validateForm({ isAuth: false, values, errors });\r\n        return errors;\r\n    },\r\n    handleSubmit: (values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n            alert(JSON.stringify(values, null, 2));\r\n            setSubmitting(false);\r\n        }, 1000);\r\n    },\r\n    displayName: 'LoginForm'\r\n})(LoginForm);\r\n\r\nexport default LoginFormContainer;\r\n\r\n\r\n\r\n","import * as React from 'react'\r\nimport Block from \"../../../components/Block\";\r\nimport {Form, Input} from 'antd';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport FormField from \"../../../components/FormField\";\r\nimport {Button} from \"../../../components\";\r\nimport validateFormField from \"../../../utils/helpers/validateFormField\";\r\nimport {LockOutlined} from \"@ant-design/icons\";\r\n\r\nconst success = false;\r\n\r\n\r\nconst RegisterForm: React.FC<any>  = (props: any ) => {\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isValid,\r\n        isSubmitting,\r\n        dirty\r\n    } = props;\r\n\r\n\r\n    // @ts-ignore\r\n    return (\r\n        <div>\r\n            <Block>\r\n                <div className=\"auth\">\r\n                    <div className=\"auth__top\">\r\n                        <h2 className=\"auth__title\">Регистрация</h2>\r\n                        <p className=\"auth__descr\">Для входа в чат, вам нужно зарегистрироваться</p>\r\n\r\n                        <div>{!success ? (\r\n                                <Form\r\n                                    className=\"auth__form\"\r\n                                    // @ts-ignore\r\n                                    onSubmit={handleSubmit}\r\n                                >\r\n                                    <FormField\r\n                                        name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        handleChange={handleChange}\r\n                                        handleBlur={handleBlur}\r\n                                        errors={errors}\r\n                                        values={values}\r\n                                        touched={touched}\r\n                                    />\r\n                                    <FormField\r\n                                        prefix={<LockOutlined/>}\r\n                                        name=\"fullname\"\r\n                                        placeholder=\"Ваше имя и фамилия\"\r\n                                        handleChange={handleChange}\r\n                                        handleBlur={handleBlur}\r\n                                        errors={errors}\r\n                                        values={values}\r\n                                        touched={touched}\r\n                                    />\r\n\r\n                                    <FormField\r\n                                        name=\"password\"\r\n                                        placeholder=\"Пароль\"\r\n                                        handleChange={handleChange}\r\n                                        handleBlur={handleBlur}\r\n                                        errors={errors}\r\n                                        values={values}\r\n                                        type=\"password\"\r\n                                        touched={touched}\r\n                                    />\r\n\r\n                                    <FormField\r\n                                        name=\"password_2\"\r\n                                        placeholder=\"Повторите пароль\"\r\n                                        handleChange={handleChange}\r\n                                        handleBlur={handleBlur}\r\n                                        errors={errors}\r\n                                        type=\"password\"\r\n                                        values={values}\r\n                                        touched={touched}\r\n                                    />\r\n\r\n                                    <Form.Item\r\n                                        style={{textAlign: 'center'}}\r\n                                    >\r\n                                        {isSubmitting && !isValid && <span>Ошибка!</span>}\r\n                                        <Button\r\n                                            disabled={!dirty || !isValid || isSubmitting}\r\n                                            size=\"large\"\r\n                                            type=\"primary\"\r\n                                            onClick={handleSubmit}\r\n                                        > Sign up\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                            </Form> ) : (\r\n                            <div className=\"auth__success-block\">\r\n                                <h2>Подтвердите свой аккаунт</h2>\r\n                                <p>\r\n                                На Вашу почту отправлено письмо с ссылкой на подтверждение\r\n                                аккаунта.\r\n                                </p>\r\n                            </div>\r\n                            )}</div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className=\"auth__bottom\">\r\n                        <p>Do you have an account?</p>\r\n                        <Link\r\n                            className=\"auth__register-link\"\r\n                            to=\"/signin\"\r\n                        >\r\n                           Log in now\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </Block>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterForm;","import RegisterForm from \"./containers/RegisterForm\";\r\n\r\nexport default RegisterForm;","import * as React from 'react'\r\n\r\n\r\nimport {withFormik} from \"formik\";\r\n\r\n\r\nimport RegisterForm from \"../components/RegisterForm\";\r\nimport validateForm from \"../../../utils/helpers/validateForm\";\r\n\r\n\r\nconst RegisterFormContainer  = withFormik({\r\n    enableReinitialize: true,\r\n\r\n    validate(values) {\r\n        let errors = {};\r\n        validateForm({ isAuth: false, values, errors });\r\n        return errors;\r\n    },\r\n    handleSubmit: (values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n            alert(JSON.stringify(values, null, 2));\r\n            setSubmitting(false);\r\n        }, 1000);\r\n    },\r\n\r\n})(RegisterForm);\r\n\r\nexport default RegisterFormContainer;","import * as React from 'react'\r\nimport {Route} from 'react-router-dom'\r\n\r\nimport { LoginForm, RegisterForm } from \"../../modules\";\r\n\r\nconst Auth  = () => {\r\n    return (\r\n        <section className=\"auth\">\r\n            <div className=\"auth_content\">\r\n                <Route\r\n                    exact\r\n                    path=\"/signin\"\r\n                    component={LoginForm}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path=\"/signup\"\r\n                    component={RegisterForm}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path=\"/signup/verify\"\r\n                    component={LoginForm}\r\n                />\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Auth;","import * as React from 'react'\r\n\r\n\r\nimport {Status, Messages, ChatInput, Sidebar} from '../../containers'\r\n\r\nimport './Home.scss';\r\n\r\n\r\nconst user = true\r\nconst Home: React.FC<any>  = (props) => {\r\n    return (\r\n        <section className=\"home\">\r\n            <div className=\"chat\">\r\n                <div className=\"chat__sidebar\">\r\n                    <Sidebar/>\r\n                </div>\r\n                <div className=\"chat__dialog--wrap\">\r\n                        <div className=\"chat__dialog\">\r\n                            <div className=\"chat__dialog--status\"><Status/></div>\r\n                            <div className=\"chat__dialog--messages\"><Messages/></div>\r\n                            <div className=\"chat__dialog--chatInput\"><ChatInput/></div>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport {Route, Redirect, Switch} from \"react-router-dom\"\n\nimport {Auth, Home} from './pages'\nimport ForgotPassword from \"./components/ForgotPassword\";\n\n\nlet isAuth = true\n\nfunction App() {\n  return (\n    <div className=\"container\">\n        <Switch>\n            <Route\n                exact\n                path={[\"/signin\", \"/signup\", \"/signup/verify\"]}\n                component={Auth}\n            />\n\n            <Route\n                path=\"/forgot-password\"\n                component={ForgotPassword}\n            />\n\n            <Route\n                exact\n                path=\"/\"\n                render={() => (isAuth ? <Home /> : <Redirect to=\"signin\" />)}\n            />\n        </Switch>\n    </div>\n  );\n}\n\nexport default App;\n\n","import { call, put, takeEvery } from 'redux-saga/effects'\r\n\r\nconst apiUrl = `https://jsonplaceholder.typicode.com/users`;\r\n\r\nfunction getApi() {\r\n    return fetch(apiUrl, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n\r\n        }\r\n    }).then(response => response.json())\r\n        .catch((error) => {throw error})\r\n}\r\n\r\nfunction* fetchUsers(action : {}) {\r\n    try {\r\n        const users = yield call(getApi);\r\n        yield put({type: 'GET_USERS_SUCCESS', users: users})\r\n    } catch(e) {\r\n        yield put({type: 'GET_USERS_FAILED', message: e.message})\r\n    }\r\n}\r\n\r\nfunction* userSaga() {\r\n    yield takeEvery('GET_USERS_REQUESTED', fetchUsers)\r\n}\r\n\r\n\r\nexport default userSaga;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { all } from 'redux-saga/effects'\r\nimport userSaga from \"./user\";\r\n\r\nfunction* rootSaga() {\r\n    yield all([\r\n        userSaga(),\r\n    ])\r\n}\r\n\r\nexport default rootSaga;","import { createStore, applyMiddleware } from \"redux\"\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport rootReducer from './reducers'\r\n\r\nimport mySaga from './sagas'\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\n\r\nconst middleware: any[] = [sagaMiddleware]\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    {},\r\n    composeWithDevTools(\r\n        applyMiddleware(...middleware),\r\n    ),\r\n)\r\n\r\n\r\nsagaMiddleware.run(mySaga)\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from 'react-redux'\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\n//@ts-ignore\nimport store from './redux/store';\n\nimport './styles/index.scss';\n\n\n\nconst app = (\n    <Provider store={store}>\n        <Router>\n            <App/>\n        </Router>\n    </Provider>\n\n)\n\n\nReactDOM.render(\n    app\n,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { combineReducers } from \"redux\";\r\n\r\nconst reducers = [\"messages\", \"dialogs\", \"user\", \"attachments\"];\r\n\r\n\r\ninterface IReducerItem {\r\n    [index: string]: string;\r\n}\r\n\r\nexport default combineReducers(\r\n    reducers.reduce((initial: IReducerItem, name: string) : object => {\r\n        initial[name] = require(`./${name}`).default;\r\n        return initial;\r\n    }, {})\r\n);"],"sourceRoot":""}